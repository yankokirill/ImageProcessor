version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # RabbitMQ Port
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - ./storage/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  image_processor:
    build:
      context: .
      dockerfile: image_processor/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      POSTGRES_CONN_STRING: "postgresql://user:password@postgres:5432/mydatabase"
      RABBITMQ_ADDR: "amqp://guest:guest@rabbitmq:5672/"

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      POSTGRES_CONN_STRING: "postgresql://user:password@postgres:5432/mydatabase"
      REDIS_ADDR: "redis:6379"
      RABBITMQ_ADDR: "amqp://guest:guest@rabbitmq:5672/"

  tests:
    build:
      context: ./tests
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - server
      - image_processor