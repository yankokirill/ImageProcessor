basePath: /
host: localhost:8000
info:
  contact: {}
  description: This is a sample server for managing tasks.
  title: Task Management API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a token.
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
      summary: Log in a user
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user account.
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Failed to store value
          schema:
            type: string
      summary: Register a new user
      tags:
      - user
  /result/{task_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the current result of the task by its id.
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task Result
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      summary: Get task result
      tags:
      - tasks
  /status/{task_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the current status of the task by its id.
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task Status
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      summary: Get task status
      tags:
      - tasks
  /task:
    post:
      consumes:
      - application/json
      description: Creates a new task, sends it to ImageProcessor and returns the
        task ID.
      produces:
      - application/json
      responses:
        "201":
          description: Task ID
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to add task
          schema:
            type: string
      summary: Create a new task
      tags:
      - tasks
schemes:
- commit
swagger: "2.0"
